{
    "abi": [
        {
            "type": "constructor",
            "inputs": [
                {
                    "name": "_insuranceClaimProofVerifier",
                    "type": "address",
                    "internalType": "contract InsuranceClaimProofVerifier"
                },
                {
                    "name": "_reInsurancePool",
                    "type": "address",
                    "internalType": "contract ReInsurancePool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "fallback",
            "stateMutability": "payable"
        },
        {
            "type": "receive",
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "approveInsuranceClaimAndEscrowPayment",
            "inputs": [
                {
                    "name": "claimant",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "isUseFundFromReInsurancePool",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "approvedClaims",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "checkpoint",
            "inputs": [
                {
                    "name": "methodName",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "checkpointCounts",
            "inputs": [
                {
                    "name": "user",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "checkpointCount",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "checkpointOfStakings",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "checkpoints",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimRequests",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                },
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "claimants",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "deregisterAsClaimant",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "deregisterAsInsurer",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "deregisterAsStaker",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "getContractBalance",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "insuranceClaimProofVerifier",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract InsuranceClaimProofVerifier"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "insurers",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "reInsurancePool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ReInsurancePool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "reclaimProtocolVerifier",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "contract ReclaimProtocolVerifier"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "registerAsClaimant",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "registerAsInsurer",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "registerAsStaker",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "stakeERC20TokenIntoReInsurancePool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "stakeNativeTokenIntoInsurancePool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "payable"
        },
        {
            "type": "function",
            "name": "stakedAmounts",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "uint256",
                    "internalType": "uint256"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "stakers",
            "inputs": [
                {
                    "name": "",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "view"
        },
        {
            "type": "function",
            "name": "submitInsuranceClaim",
            "inputs": [
                {
                    "name": "proof",
                    "type": "bytes",
                    "internalType": "bytes"
                },
                {
                    "name": "publicInputs",
                    "type": "bytes32[]",
                    "internalType": "bytes32[]"
                },
                {
                    "name": "insurer",
                    "type": "address",
                    "internalType": "address"
                }
            ],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "testFunctionForCheckPoint",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unstakeERC20TokenFromReInsurancePool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "unstakeNativeTokenFromInsurancePool",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "bool",
                    "internalType": "bool"
                }
            ],
            "stateMutability": "nonpayable"
        },
        {
            "type": "function",
            "name": "version",
            "inputs": [],
            "outputs": [
                {
                    "name": "",
                    "type": "string",
                    "internalType": "string"
                }
            ],
            "stateMutability": "view"
        }
    ],
    "bytecode": {
        "object": "",
        "sourceMap": "369:9608:0:-:0;;;1221:274;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1358:27;:58;;-1:-1:-1;;;;;1358:58:0;;;-1:-1:-1;;;;;;1358:58:0;;;;;;;1426:15;:34;;;;;;;;;;;;;;;1470:18;;;;;;;;;;;;-1:-1:-1;;;1470:18:0;;;;1358:27;;1470:18;;1358:27;1470:18;:::i;:::-;;1221:274;;369:9608;;14:160:33;-1:-1:-1;;;;;118:31:33;;108:42;;98:70;;164:1;161;154:12;98:70;14:160;:::o;179:503::-;318:6;326;379:2;367:9;358:7;354:23;350:32;347:52;;;395:1;392;385:12;347:52;427:9;421:16;446:60;500:5;446:60;:::i;:::-;575:2;560:18;;554:25;525:5;;-1:-1:-1;588:62:33;554:25;588:62;:::i;:::-;669:7;659:17;;;179:503;;;;;:::o;687:127::-;748:10;743:3;739:20;736:1;729:31;779:4;776:1;769:15;803:4;800:1;793:15;819:380;898:1;894:12;;;;941;;;962:61;;1016:4;1008:6;1004:17;994:27;;962:61;1069:2;1061:6;1058:14;1038:18;1035:38;1032:161;;1115:10;1110:3;1106:20;1103:1;1096:31;1150:4;1147:1;1140:15;1178:4;1175:1;1168:15;1032:161;;819:380;;;:::o;1330:518::-;1432:2;1427:3;1424:11;1421:421;;;1468:5;1465:1;1458:16;1512:4;1509:1;1499:18;1582:2;1570:10;1566:19;1563:1;1559:27;1553:4;1549:38;1618:4;1606:10;1603:20;1600:47;;;-1:-1:-1;1641:4:33;1600:47;1696:2;1691:3;1687:12;1684:1;1680:20;1674:4;1670:31;1660:41;;1751:81;1769:2;1762:5;1759:13;1751:81;;;1828:1;1814:16;;1795:1;1784:13;1751:81;;;1755:3;;1421:421;1330:518;;;:::o;2024:1299::-;2144:10;;-1:-1:-1;;;;;2166:30:33;;2163:56;;;2199:18;;:::i;:::-;2228:97;2318:6;2278:38;2310:4;2304:11;2278:38;:::i;:::-;2272:4;2228:97;:::i;:::-;2374:4;2405:2;2394:14;;2422:1;2417:649;;;;3110:1;3127:6;3124:89;;;-1:-1:-1;3179:19:33;;;3173:26;3124:89;-1:-1:-1;;1981:1:33;1977:11;;;1973:24;1969:29;1959:40;2005:1;2001:11;;;1956:57;3226:81;;2387:930;;2417:649;1277:1;1270:14;;;1314:4;1301:18;;-1:-1:-1;;2453:20:33;;;2571:222;2585:7;2582:1;2579:14;2571:222;;;2667:19;;;2661:26;2646:42;;2774:4;2759:20;;;;2727:1;2715:14;;;;2601:12;2571:222;;;2575:3;2821:6;2812:7;2809:19;2806:201;;;2882:19;;;2876:26;-1:-1:-1;;2965:1:33;2961:14;;;2977:3;2957:24;2953:37;2949:42;2934:58;2919:74;;2806:201;-1:-1:-1;;;;3053:1:33;3037:14;;;3033:22;3020:36;;-1:-1:-1;2024:1299:33:o;:::-;369:9608:0;;;;;;",
        "linkReferences": {}
    },
    "deployedBytecode": {
        "object": "0x6080604052600436106101bb5760003560e01c8063782d13b3116100ec5780639a23bfa51161008a578063c0a3299611610064578063c0a3299614610664578063de45aeef14610691578063f5603c07146106c1578063fb9316fa146106c957610275565b80639a23bfa51461061a578063a6a721af1461062f578063aa3f6cdd1461064f57610275565b80638099b3f5116100c65780638099b3f51461056d57806386a74843146105825780638d68dd61146105af5780639168ae72146105ea57610275565b8063782d13b3146105085780637d8440ea1461051d578063801cdf011461053257610275565b80632481f598116101595780636697a925116101335780636697a925146104ab57806369b76ed9146104cb5780636f9fb98a146104e0578063767d5679146104f357610275565b80632481f5981461045657806354fd4d501461047657806366717ca11461048b57610275565b806317d1bd2b1161019557806317d1bd2b146103d4578063186667131461040c5780631c407d92146104215780632283cf291461044157610275565b80630cdfebfa1461032357806310c1c10314610359578063171c41af1461039457610275565b36610275576000341161020c5760405162461bcd60e51b815260206004820152601460248201527326bab9ba1039b2b7321039b7b6b29022ba3432b960611b60448201526064015b60405180910390fd5b336000908152600c60205260408120805434929061022b9084906117b3565b909155505060408051808201825260078152667265636569766560c81b6020808301919091523360009081526008825283812042825290915291909120906102739082611865565b005b600034116102bc5760405162461bcd60e51b815260206004820152601460248201527326bab9ba1039b2b7321039b7b6b29022ba3432b960611b6044820152606401610203565b336000908152600c6020526040812080543492906102db9084906117b3565b909155505060408051808201825260088082526766616c6c6261636b60c01b602080840191909152336000908152918152838220428352905291909120906102739082611865565b34801561032f57600080fd5b5061034361033e366004611940565b6106de565b604051610350919061196a565b60405180910390f35b34801561036557600080fd5b506103866103743660046119b8565b600c6020526000908152604090205481565b604051908152602001610350565b3480156103a057600080fd5b506103c46103af3660046119b8565b60056020526000908152604090205460ff1681565b6040519015158152602001610350565b3480156103e057600080fd5b506003546103f4906001600160a01b031681565b6040516001600160a01b039091168152602001610350565b34801561041857600080fd5b506103c4610783565b34801561042d57600080fd5b506001546103f4906001600160a01b031681565b34801561044d57600080fd5b506103c461087c565b34801561046257600080fd5b506103c4610471366004611a26565b6108bc565b34801561048257600080fd5b50610343610af6565b34801561049757600080fd5b506002546103f4906001600160a01b031681565b3480156104b757600080fd5b506103c46104c6366004611adb565b610b03565b3480156104d757600080fd5b506103c4610b97565b3480156104ec57600080fd5b5047610386565b3480156104ff57600080fd5b506103c4610c24565b34801561051457600080fd5b506103c4610c64565b34801561052957600080fd5b506103c4610d34565b34801561053e57600080fd5b506103c461054d366004611b94565b600760209081526000928352604080842090915290825290205460ff1681565b34801561057957600080fd5b506103c4610eca565b34801561058e57600080fd5b5061038661059d3660046119b8565b600a6020526000908152604090205481565b3480156105bb57600080fd5b506103c46105ca366004611b94565b600660209081526000928352604080842090915290825290205460ff1681565b3480156105f657600080fd5b506103c46106053660046119b8565b600b6020526000908152604090205460ff1681565b34801561062657600080fd5b506103c4610f22565b34801561063b57600080fd5b506103c461064a366004611bd8565b61101f565b34801561065b57600080fd5b506103c46114a9565b34801561067057600080fd5b5061038661067f3660046119b8565b60096020526000908152604090205481565b34801561069d57600080fd5b506103c46106ac3660046119b8565b60046020526000908152604090205460ff1681565b6103c4611535565b3480156106d557600080fd5b506103c46116d1565b600860209081526000928352604080842090915290825290208054610702906117dc565b80601f016020809104026020016040519081016040528092919081815260200182805461072e906117dc565b801561077b5780601f106107505761010080835404028352916020019161077b565b820191906000526020600020905b81548152906001019060200180831161075e57829003601f168201915b505050505081565b3360009081526005602052604081205460ff16156107f55760405162461bcd60e51b815260206004820152602960248201527f596f75206861766520616c7265616479207265676973746572656420617320616044820152680818db185a5b585b9d60ba1b6064820152608401610203565b336000818152600560209081526040808320805460ff191660011790558051808201825260128152711c9959da5cdd195c905cd0db185a5b585b9d60721b81840152938352600882528083204284529091529020906108549082611865565b5033600090815260096020526040812080549161087083611c0f565b91905055506001905090565b6000604051806060016040528060228152602001611d74602291393360009081526008602090815260408083204284529091529020906108549082611865565b3360009081526005602052604081205460ff166108eb5760405162461bcd60e51b815260040161020390611c28565b6001600160a01b038216330361097e5760405162461bcd60e51b815260206004820152604c60248201527f596f752c2077686f206973206120636c61696d616e742c2063616e6e6f74207360448201527f75626d6974206120636c61696d20746f20796f757273656c662c20776869636860648201526b1034b990309034b9b9bab2b960a11b608482015260a401610203565b60015460405163279c891160e01b81526000916001600160a01b03169063279c8911906109b5908a908a908a908a90600401611c6c565b602060405180830381865afa1580156109d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f69190611cd0565b905080610a565760405162461bcd60e51b815260206004820152602860248201527f4120676976656e20496e737572616e6365436c61696d50726f6f66206973206e6044820152671bdd081d985b1a5960c21b6064820152608401610203565b6001600160a01b038316600090815260066020908152604080832033808552908352818420805460ff191660011790558151808301835260148152737375626d6974496e737572616e6365436c61696d60601b818501529084526008835281842042855290925290912090610acb9082611865565b50336000908152600960205260408120805491610ae783611c0f565b91905055505095945050505050565b60008054610702906117dc565b3360009081526008602090815260408083204284529091528120610b278382611865565b50604080518082018252600a81526918da1958dadc1bda5b9d60b21b602080830191909152336000908152600882528381204282529091529190912090610b6e9082611865565b50336000908152600960205260408120805491610b8a83611c0f565b9091555060019392505050565b3360009081526005602052604081205460ff16610bc65760405162461bcd60e51b815260040161020390611c28565b336000818152600560209081526040808320805460ff1916905580518082018252601481527319195c9959da5cdd195c905cd0db185a5b585b9d60621b81840152938352600882528083204284529091529020906108549082611865565b6000604051806060016040528060248152602001611dbb602491393360009081526008602090815260408083204284529091529020906108549082611865565b3360009081526004602052604081205460ff1615610cd65760405162461bcd60e51b815260206004820152602960248201527f596f75206861766520616c726561647920726567697374657265642061732061604482015268371034b739bab932b960b91b6064820152608401610203565b336000818152600460209081526040808320805460ff191660011790558051808201825260118152703932b3b4b9ba32b920b9a4b739bab932b960791b81840152938352600882528083204284529091529020906108549082611865565b336000908152600a60209081526040808320429055600b90915281205460ff16610d975760405162461bcd60e51b81526020600482015260146024820152732cb7ba9030b932903737ba10309039ba30b5b2b960611b6044820152606401610203565b336000908152600c6020526040902054610e015760405162461bcd60e51b815260206004820152602560248201527f596f752068617665206e6f207374616b656420616d6f756e7420746f20776974604482015264686472617760d81b6064820152608401610203565b336000818152600c6020526040808220805490839055905190929190829084908381818185875af1925050503d8060008114610e59576040519150601f19603f3d011682016040523d82523d6000602084013e610e5e565b606091505b5050905080610ea05760405162461bcd60e51b815260206004820152600e60248201526d155b9cdd185ad94819985a5b195960921b6044820152606401610203565b336000908152600960205260408120805491610ebb83611c0f565b91905055506001935050505090565b604080518082018252601981527f7465737446756e6374696f6e466f72436865636b506f696e740000000000000060208083019190915233600090815260088252838120428252909152918220906108549082611865565b336000908152600b602052604081205460ff16610f515760405162461bcd60e51b815260040161020390611ced565b336000908152600c602052604090205415610fc35760405162461bcd60e51b815260206004820152602c60248201527f596f752068617665207374616b656420616d6f756e742c20706c65617365207560448201526b1b9cdd185ad948199a5c9cdd60a21b6064820152608401610203565b336000818152600b60209081526040808320805460ff191690558051808201825260128152713232b932b3b4b9ba32b920b9a9ba30b5b2b960711b81840152938352600882528083204284529091529020906108549082611865565b3360009081526004602052604081205460ff1661104e5760405162461bcd60e51b815260040161020390611d2f565b6001600160a01b03831660009081526005602052604090205460ff166110c65760405162461bcd60e51b815260206004820152602760248201527f4e6f20636c61696d207265717565737420666f756e6420666f722074686973206044820152666164647265737360c81b6064820152608401610203565b6001600160a01b038316330361115b5760405162461bcd60e51b815260206004820152604e60248201527f596f752c2077686f20697320616e20696e73757265722c2063616e6e6f74207360448201527f75626d6974206120636c61696d20746f20796f757273656c662c20776869636860648201526d081a5cc8184818db185a5b585b9d60921b608482015260a401610203565b3360009081526007602090815260408083206001600160a01b0387168452825291829020805460ff19166001179055815160608101909252602580835290611d96908301393360009081526008602090815260408083204284529091529020906111c59082611865565b503360009081526009602052604081208054916111e183611c0f565b9190505550811561135a576002546001906001600160a01b03163181106112705760405162461bcd60e51b815260206004820152603c60248201527f546865205265496e737572616e6365506f6f6c20636f6e74726163742068617360448201527f206e6f2066756e647320746f2075736520666f72207061796d656e74000000006064820152608401610203565b600254604051636fbc593160e11b81526001600160a01b03909116600482018190526024820183905260009163df78b262906044016020604051808303816000875af11580156112c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e89190611cd0565b9050806113535760405162461bcd60e51b815260206004820152603360248201527f4661696c656420746f20646973747269627574652066756e64732066726f6d206044820152721d1a19481499525b9cdd5c985b98d9541bdbdb606a1b6064820152608401610203565b505061149f565b600047116114075760405162461bcd60e51b815260206004820152606860248201527f5468697320496e737572616e6365436c61696d4d616e6167657220636f6e747260448201527f6163742c20776869636820697320746865207072696d616c20696e737572616e60648201527f636520706f6f6c2c20686173206e6f2066756e647320746f2075736520666f72608482015267081c185e5b595b9d60c21b60a482015260c401610203565b6040516001906000906001600160a01b0386169083908381818185875af1925050503d8060008114611455576040519150601f19603f3d011682016040523d82523d6000602084013e61145a565b606091505b505090508061149c5760405162461bcd60e51b815260206004820152600e60248201526d14185e5b595b9d0819985a5b195960921b6044820152606401610203565b50505b5060015b92915050565b3360009081526004602052604081205460ff166114d85760405162461bcd60e51b815260040161020390611d2f565b336000818152600460209081526040808320805460ff191690558051808201825260138152723232b932b3b4b9ba32b920b9a4b739bab932b960691b81840152938352600882528083204284529091529020906108549082611865565b336000908152600a60209081526040808320429055600b90915281205460ff166115715760405162461bcd60e51b815260040161020390611ced565b600034116115c15760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610203565b34333110156116125760405162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e742062616c616e636520746f207374616b650000006044820152606401610203565b336000908152600c6020526040808220349081905590513091908381818185875af1925050503d8060008114611664576040519150601f19603f3d011682016040523d82523d6000602084013e611669565b606091505b50509050806116a95760405162461bcd60e51b815260206004820152600c60248201526b14dd185ad94819985a5b195960a21b6044820152606401610203565b3360009081526009602052604081208054916116c483611c0f565b9190505550600191505090565b336000908152600b602052604081205460ff16156117405760405162461bcd60e51b815260206004820152602660248201527f596f752061726520616c7265616479207265676973746572656420617320612060448201526539ba30b5b2b960d11b6064820152608401610203565b336000818152600b60209081526040808320805460ff1916600117905580518082018252601081526f3932b3b4b9ba32b920b9a9ba30b5b2b960811b81840152938352600882528083204284529091529020906108549082611865565b634e487b7160e01b600052601160045260246000fd5b808201808211156114a3576114a361179d565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806117f057607f821691505b60208210810361181057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561186057806000526020600020601f840160051c8101602085101561183d5750805b601f840160051c820191505b8181101561185d5760008155600101611849565b50505b505050565b815167ffffffffffffffff81111561187f5761187f6117c6565b6118938161188d84546117dc565b84611816565b6020601f8211600181146118c757600083156118af5750848201515b600019600385901b1c1916600184901b17845561185d565b600084815260208120601f198516915b828110156118f757878501518255602094850194600190920191016118d7565b50848210156119155786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b80356001600160a01b038116811461193b57600080fd5b919050565b6000806040838503121561195357600080fd5b61195c83611924565b946020939093013593505050565b602081526000825180602084015260005b81811015611998576020818601810151604086840101520161197b565b506000604082850101526040601f19601f83011684010191505092915050565b6000602082840312156119ca57600080fd5b6119d382611924565b9392505050565b60008083601f8401126119ec57600080fd5b50813567ffffffffffffffff811115611a0457600080fd5b6020830191508360208260051b8501011115611a1f57600080fd5b9250929050565b600080600080600060608688031215611a3e57600080fd5b853567ffffffffffffffff811115611a5557600080fd5b8601601f81018813611a6657600080fd5b803567ffffffffffffffff811115611a7d57600080fd5b886020828401011115611a8f57600080fd5b60209182019650945086013567ffffffffffffffff811115611ab057600080fd5b611abc888289016119da565b9094509250611acf905060408701611924565b90509295509295909350565b600060208284031215611aed57600080fd5b813567ffffffffffffffff811115611b0457600080fd5b8201601f81018413611b1557600080fd5b803567ffffffffffffffff811115611b2f57611b2f6117c6565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611b5e57611b5e6117c6565b604052818152828201602001861015611b7657600080fd5b81602084016020830137600091810160200191909152949350505050565b60008060408385031215611ba757600080fd5b611bb083611924565b9150611bbe60208401611924565b90509250929050565b8015158114611bd557600080fd5b50565b60008060408385031215611beb57600080fd5b611bf483611924565b91506020830135611c0481611bc7565b809150509250929050565b600060018201611c2157611c2161179d565b5060010190565b60208082526024908201527f596f7520617265206e6f742072656769737465726564206173206120636c61696040820152631b585b9d60e21b606082015260800190565b6040815283604082015283856060830137600060608583018101829052601f19601f8701168301838103820160208501529081018490526001600160fb1b03841115611cb757600080fd5b8360051b80866080840137016080019695505050505050565b600060208284031215611ce257600080fd5b81516119d381611bc7565b60208082526022908201527f596f7520617265206e6f7420726567697374657265642061732061207374616b60408201526132b960f11b606082015260800190565b60208082526024908201527f596f7520617265206e6f74207265676973746572656420617320616e20696e736040820152633ab932b960e11b60608201526080019056fe7374616b654552433230546f6b656e496e746f5265496e737572616e6365506f6f6c617070726f7665496e737572616e6365436c61696d416e64457363726f775061796d656e74756e7374616b654552433230546f6b656e46726f6d5265496e737572616e6365506f6f6ca26469706673582212200fe8ca1911137d2d8f531c5d20387b0c8a34fe451db6523d19cb38e1cfff41ea64736f6c634300081c0033",
        "sourceMap": "369:9608:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9322:1;9310:9;:13;9302:46;;;;-1:-1:-1;;;9302:46:0;;216:2:33;9302:46:0;;;198:21:33;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:33;;;267:50;334:18;;9302:46:0;;;;;;;;;9372:10;9358:25;;;;:13;:25;;;;;:38;;9387:9;;9358:25;:38;;9387:9;;9358:38;:::i;:::-;;;;-1:-1:-1;;9531:52:0;;;;;;;;;;;-1:-1:-1;;;9531:52:0;;;;;;;;9543:10;-1:-1:-1;9531:23:0;;;:11;:23;;;;;9555:15;9531:40;;;;;;;;;;:52;;:40;:52;:::i;:::-;;369:9608;9705:1;9693:9;:13;9685:46;;;;-1:-1:-1;;;9685:46:0;;216:2:33;9685:46:0;;;198:21:33;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:33;;;267:50;334:18;;9685:46:0;14:344:33;9685:46:0;9755:10;9741:25;;;;:13;:25;;;;;:38;;9770:9;;9741:25;:38;;9770:9;;9741:38;:::i;:::-;;;;-1:-1:-1;;9914:53:0;;;;;;;;;;;;-1:-1:-1;;;9914:53:0;;;;;;;;9926:10;-1:-1:-1;9914:23:0;;;;;;;;;9938:15;9914:40;;;;;;;;;:53;;:40;:53;:::i;911:65::-;;;;;;;;;;-1:-1:-1;911:65:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1166:48;;;;;;;;;;-1:-1:-1;1166:48:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4572:25:33;;;4560:2;4545:18;1166:48:0;4426:177:33;720:41:0;;;;;;;;;;-1:-1:-1;720:41:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4773:14:33;;4766:22;4748:41;;4736:2;4721:18;720:41:0;4608:187:33;613:54:0;;;;;;;;;;-1:-1:-1;613:54:0;;;;-1:-1:-1;;;;;613:54:0;;;;;;-1:-1:-1;;;;;4996:32:33;;;4978:51;;4966:2;4951:18;613:54:0;4800:235:33;4120:317:0;;;;;;;;;;;;;:::i;435:62::-;;;;;;;;;;-1:-1:-1;435:62:0;;;;-1:-1:-1;;;;;435:62:0;;;7889:244;;;;;;;;;;;;;:::i;1575:781::-;;;;;;;;;;-1:-1:-1;1575:781:0;;;;;:::i;:::-;;:::i;407:21::-;;;;;;;;;;;;;:::i;503:38::-;;;;;;;;;;-1:-1:-1;503:38:0;;;;-1:-1:-1;;;;;503:38:0;;;8702:264;;;;;;;;;;-1:-1:-1;8702:264:0;;;;;:::i;:::-;;:::i;4834:316::-;;;;;;;;;;;;;:::i;8538:105::-;;;;;;;;;;-1:-1:-1;8615:21:0;8538:105;;8211:248;;;;;;;;;;;;;:::i;4443:313::-;;;;;;;;;;;;;:::i;7244:568::-;;;;;;;;;;;;;:::i;838:66::-;;;;;;;;;;-1:-1:-1;838:66:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;8972:207;;;;;;;;;;;;;:::i;1060:55::-;;;;;;;;;;-1:-1:-1;1060:55:0;;;;;:::i;:::-;;;;;;;;;;;;;;767:65;;;;;;;;;;-1:-1:-1;767:65:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1121:39;;;;;;;;;;-1:-1:-1;1121:39:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;6078:403;;;;;;;;;;;;;:::i;2437:1607::-;;;;;;;;;;-1:-1:-1;2437:1607:0;;;;;:::i;:::-;;:::i;5156:312::-;;;;;;;;;;;;;:::i;982:72::-;;;;;;;;;;-1:-1:-1;982:72:0;;;;;:::i;:::-;;;;;;;;;;;;;;674:40;;;;;;;;;;-1:-1:-1;674:40:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;6583:557;;;:::i;5766:306::-;;;;;;;;;;;;;:::i;911:65::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4120:317::-;4201:10;4166:4;4191:21;;;:9;:21;;;;;;;;4190:22;4182:76;;;;-1:-1:-1;;;4182:76:0;;8758:2:33;4182:76:0;;;8740:21:33;8797:2;8777:18;;;8770:30;8836:34;8816:18;;;8809:62;-1:-1:-1;;;8887:18:33;;;8880:39;8936:19;;4182:76:0;8556:405:33;4182:76:0;4278:10;4268:21;;;;:9;:21;;;;;;;;:28;;-1:-1:-1;;4268:28:0;4292:4;4268:28;;;4306:63;;;;;;;;;;-1:-1:-1;;;4306:63:0;;;;:23;;;:11;:23;;;;;4330:15;4306:40;;;;;;;;:63;;:40;:63;:::i;:::-;-1:-1:-1;4396:10:0;4379:28;;;;:16;:28;;;;;:30;;;;;;:::i;:::-;;;;;;4426:4;4419:11;;4120:317;:::o;7889:244::-;7951:4;7986:79;;;;;;;;;;;;;;;;;7998:10;7986:23;;;;:11;:23;;;;;;;;8010:15;7986:40;;;;;;;;:79;;:40;:79;:::i;1575:781::-;1727:10;1693:4;1717:21;;;:9;:21;;;;;;;;1709:70;;;;-1:-1:-1;;;1709:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1797:21:0;;:10;:21;1789:110;;;;-1:-1:-1;;;1789:110:0;;9713:2:33;1789:110:0;;;9695:21:33;9752:2;9732:18;;;9725:30;9791:34;9771:18;;;9764:62;9862:34;9842:18;;;9835:62;-1:-1:-1;;;9913:19:33;;;9906:43;9966:19;;1789:110:0;9511:480:33;1789:110:0;1929:27;;:74;;-1:-1:-1;;;1929:74:0;;1910:16;;-1:-1:-1;;;;;1929:27:0;;:53;;:74;;1983:5;;;;1990:12;;;;1929:74;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1910:93;;2126:11;2118:64;;;;-1:-1:-1;;;2118:64:0;;11224:2:33;2118:64:0;;;11206:21:33;11263:2;11243:18;;;11236:30;11302:34;11282:18;;;11275:62;-1:-1:-1;;;11353:18:33;;;11346:38;11401:19;;2118:64:0;11022:404:33;2118:64:0;-1:-1:-1;;;;;2193:22:0;;;;;;:13;:22;;;;;;;;2216:10;2193:34;;;;;;;;;:41;;-1:-1:-1;;2193:41:0;2230:4;2193:41;;;2244:65;;;;;;;;;;-1:-1:-1;;;2244:65:0;;;;:23;;;:11;:23;;;;;2268:15;2244:40;;;;;;;;;:65;;:40;:65;:::i;:::-;-1:-1:-1;2336:10:0;2319:28;;;;:16;:28;;;;;:30;;;;;;:::i;:::-;;;;;;1699:657;1575:781;;;;;;;:::o;407:21::-;;;;;;;:::i;8702:264::-;8792:10;8764:4;8780:23;;;:11;:23;;;;;;;;8804:15;8780:40;;;;;;;:53;8823:10;8780:40;:53;:::i;:::-;-1:-1:-1;8843:55:0;;;;;;;;;;;-1:-1:-1;;;8843:55:0;;;;;;;;8855:10;-1:-1:-1;8843:23:0;;;:11;:23;;;;;8867:15;8843:40;;;;;;;;;;:55;;:40;:55;:::i;:::-;-1:-1:-1;8925:10:0;8908:28;;;;:16;:28;;;;;:30;;;;;;:::i;:::-;;;;-1:-1:-1;8955:4:0;;8702:264;-1:-1:-1;;;8702:264:0:o;4834:316::-;4916:10;4882:4;4906:21;;;:9;:21;;;;;;;;4898:70;;;;-1:-1:-1;;;4898:70:0;;;;;;;:::i;:::-;4988:10;5002:5;4978:21;;;:9;:21;;;;;;;;:29;;-1:-1:-1;;4978:29:0;;;5017:65;;;;;;;;;;-1:-1:-1;;;5017:65:0;;;;:23;;;:11;:23;;;;;5041:15;5017:40;;;;;;;;:65;;:40;:65;:::i;8211:248::-;8275:4;8310:81;;;;;;;;;;;;;;;;;8322:10;8310:23;;;;:11;:23;;;;;;;;8334:15;8310:40;;;;;;;;:81;;:40;:81;:::i;4443:313::-;4522:10;4488:4;4513:20;;;:8;:20;;;;;;;;4512:21;4504:75;;;;-1:-1:-1;;;4504:75:0;;11633:2:33;4504:75:0;;;11615:21:33;11672:2;11652:18;;;11645:30;11711:34;11691:18;;;11684:62;-1:-1:-1;;;11762:18:33;;;11755:39;11811:19;;4504:75:0;11431:405:33;4504:75:0;4598:10;4589:20;;;;:8;:20;;;;;;;;:27;;-1:-1:-1;;4589:27:0;4612:4;4589:27;;;4626:62;;;;;;;;;;-1:-1:-1;;;4626:62:0;;;;:23;;;:11;:23;;;;;4650:15;4626:40;;;;;;;;:62;;:40;:62;:::i;7244:568::-;5614:10;7307:4;5593:32;;;:20;:32;;;;;;;;5628:15;5593:50;;7363:7;:19;;;;;;;;7355:52;;;;-1:-1:-1;;;7355:52:0;;12043:2:33;7355:52:0;;;12025:21:33;12082:2;12062:18;;;12055:30;-1:-1:-1;;;12101:18:33;;;12094:50;12161:18;;7355:52:0;11841:344:33;7355:52:0;7439:10;7453:1;7425:25;;;:13;:25;;;;;;7417:79;;;;-1:-1:-1;;;7417:79:0;;12392:2:33;7417:79:0;;;12374:21:33;12431:2;12411:18;;;12404:30;12470:34;12450:18;;;12443:62;-1:-1:-1;;;12521:18:33;;;12514:35;12566:19;;7417:79:0;12190:401:33;7417:79:0;7537:10;7506:14;7523:25;;;:13;:25;;;;;;;;7612:29;;;;7670:30;;7523:25;;7537:10;7506:14;7537:10;;7523:25;;7506:14;7670:30;7506:14;7670:30;7523:25;7537:10;7670:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7651:49;;;7718:7;7710:34;;;;-1:-1:-1;;;7710:34:0;;13008:2:33;7710:34:0;;;12990:21:33;13047:2;13027:18;;;13020:30;-1:-1:-1;;;13066:18:33;;;13059:44;13120:18;;7710:34:0;12806:338:33;7710:34:0;7771:10;7754:28;;;;:16;:28;;;;;:30;;;;;;:::i;:::-;;;;;;7801:4;7794:11;;;;;7244:568;:::o;8972:207::-;9041:70;;;;;;;;;;;;;;;;;;;;9053:10;9025:4;9041:23;;;:11;:23;;;;;9065:15;9041:40;;;;;;;;;:70;;:40;:70;:::i;6078:403::-;6156:10;6124:4;6148:19;;;:7;:19;;;;;;;;6140:66;;;;-1:-1:-1;;;6140:66:0;;;;;;;:::i;:::-;6238:10;6224:25;;;;:13;:25;;;;;;:30;6216:87;;;;-1:-1:-1;;;6216:87:0;;13754:2:33;6216:87:0;;;13736:21:33;13793:2;13773:18;;;13766:30;13832:34;13812:18;;;13805:62;-1:-1:-1;;;13883:18:33;;;13876:42;13935:19;;6216:87:0;13552:408:33;6216:87:0;6321:10;6335:5;6313:19;;;:7;:19;;;;;;;;:27;;-1:-1:-1;;6313:27:0;;;6350:63;;;;;;;;;;-1:-1:-1;;;6350:63:0;;;;:23;;;:11;:23;;;;;6374:15;6350:40;;;;;;;;:63;;:40;:63;:::i;2437:1607::-;2586:10;2553:4;2577:20;;;:8;:20;;;;;;;;2569:69;;;;-1:-1:-1;;;2569:69:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2656:19:0;;;;;;:9;:19;;;;;;;;2648:71;;;;-1:-1:-1;;;2648:71:0;;14572:2:33;2648:71:0;;;14554:21:33;14611:2;14591:18;;;14584:30;14650:34;14630:18;;;14623:62;-1:-1:-1;;;14701:18:33;;;14694:37;14748:19;;2648:71:0;14370:403:33;2648:71:0;-1:-1:-1;;;;;2737:22:0;;:10;:22;2729:113;;;;-1:-1:-1;;;2729:113:0;;14980:2:33;2729:113:0;;;14962:21:33;15019:2;14999:18;;;14992:30;15058:34;15038:18;;;15031:62;15129:34;15109:18;;;15102:62;-1:-1:-1;;;15180:19:33;;;15173:45;15235:19;;2729:113:0;14778:482:33;2729:113:0;2868:10;2853:26;;;;:14;:26;;;;;;;;-1:-1:-1;;;;;2853:36:0;;;;;;;;;;:43;;-1:-1:-1;;2853:43:0;2892:4;2853:43;;;2906:82;;;;;;;;;;;;;;;;;;2918:10;2906:23;;;;:11;:23;;;;;;;;2930:15;2906:40;;;;;;;;:82;;:40;:82;:::i;:::-;-1:-1:-1;3015:10:0;2998:28;;;;:16;:28;;;;;:30;;;;;;:::i;:::-;;;;;;3110:28;3106:910;;;3267:15;;3187:1;;-1:-1:-1;;;;;3267:15:0;3259:32;:57;-1:-1:-1;3251:130:0;;;;-1:-1:-1;;;3251:130:0;;15467:2:33;3251:130:0;;;15449:21:33;15506:2;15486:18;;;15479:30;15545:34;15525:18;;;15518:62;15616:30;15596:18;;;15589:58;15664:19;;3251:130:0;15265:424:33;3251:130:0;3409:15;;:104;;-1:-1:-1;;;3409:104:0;;-1:-1:-1;;;;;3409:15:0;;;:104;;;15868:51:33;;;15935:18;;;15928:34;;;3395:11:0;;3409:54;;15841:18:33;;3409:104:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3395:118;;3535:6;3527:70;;;;-1:-1:-1;;;3527:70:0;;16175:2:33;3527:70:0;;;16157:21:33;16214:2;16194:18;;;16187:30;16253:34;16233:18;;;16226:62;-1:-1:-1;;;16304:18:33;;;16297:49;16363:19;;3527:70:0;15973:415:33;3527:70:0;3140:468;;3106:910;;;3660:1;3636:21;:25;3628:142;;;;-1:-1:-1;;;3628:142:0;;16595:2:33;3628:142:0;;;16577:21:33;16634:3;16614:18;;;16607:31;16674:34;16654:18;;;16647:62;16745:34;16725:18;;;16718:62;16817:34;16796:19;;;16789:63;-1:-1:-1;;;16868:19:33;;;16861:39;16917:19;;3628:142:0;16393:549:33;3628:142:0;3900:57;;3817:1;;3784:30;;-1:-1:-1;;;;;3900:22:0;;;3817:1;;3784:30;3900:57;3784:30;3900:57;3817:1;3900:22;:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3881:76;;;3979:7;3971:34;;;;-1:-1:-1;;;3971:34:0;;17149:2:33;3971:34:0;;;17131:21:33;17188:2;17168:18;;;17161:30;-1:-1:-1;;;17207:18:33;;;17200:44;17261:18;;3971:34:0;16947:338:33;3971:34:0;3614:402;;3106:910;-1:-1:-1;4033:4:0;2437:1607;;;;;:::o;5156:312::-;5236:10;5203:4;5227:20;;;:8;:20;;;;;;;;5219:69;;;;-1:-1:-1;;;5219:69:0;;;;;;;:::i;:::-;5307:10;5321:5;5298:20;;;:8;:20;;;;;;;;:28;;-1:-1:-1;;5298:28:0;;;5336:64;;;;;;;;;;-1:-1:-1;;;5336:64:0;;;;:23;;;:11;:23;;;;;5360:15;5336:40;;;;;;;;:64;;:40;:64;:::i;6583:557::-;5614:10;6652:4;5593:32;;;:20;:32;;;;;;;;5628:15;5593:50;;6708:7;:19;;;;;;;;6700:66;;;;-1:-1:-1;;;6700:66:0;;;;;;;:::i;:::-;6796:1;6784:9;:13;6776:55;;;;-1:-1:-1;;;6776:55:0;;17492:2:33;6776:55:0;;;17474:21:33;17531:2;17511:18;;;17504:30;17570:31;17550:18;;;17543:59;17619:18;;6776:55:0;17290:353:33;6776:55:0;6871:9;6849:10;:18;:31;;6841:73;;;;-1:-1:-1;;;6841:73:0;;17850:2:33;6841:73:0;;;17832:21:33;17889:2;17869:18;;;17862:30;17928:31;17908:18;;;17901:59;17977:18;;6841:73:0;17648:353:33;6841:73:0;6938:10;6924:25;;;;:13;:25;;;;;;6952:9;6924:37;;;;6990:40;;6998:4;;6952:9;6924:25;6990:40;6924:25;6990:40;6952:9;6998:4;6990:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6971:59;;;7048:7;7040:32;;;;-1:-1:-1;;;7040:32:0;;18208:2:33;7040:32:0;;;18190:21:33;18247:2;18227:18;;;18220:30;-1:-1:-1;;;18266:18:33;;;18259:42;18318:18;;7040:32:0;18006:336:33;7040:32:0;7099:10;7082:28;;;;:16;:28;;;;;:30;;;;;;:::i;:::-;;;;;;7129:4;7122:11;;;6583:557;:::o;5766:306::-;5843:10;5810:4;5835:19;;;:7;:19;;;;;;;;5834:20;5826:71;;;;-1:-1:-1;;;5826:71:0;;18549:2:33;5826:71:0;;;18531:21:33;18588:2;18568:18;;;18561:30;18627:34;18607:18;;;18600:62;-1:-1:-1;;;18678:18:33;;;18671:36;18724:19;;5826:71:0;18347:402:33;5826:71:0;5915:10;5907:19;;;;:7;:19;;;;;;;;:26;;-1:-1:-1;;5907:26:0;5929:4;5907:26;;;5943:61;;;;;;;;;;-1:-1:-1;;;5943:61:0;;;;:23;;;:11;:23;;;;;5967:15;5943:40;;;;;;;;:61;;:40;:61;:::i;363:127:33:-;424:10;419:3;415:20;412:1;405:31;455:4;452:1;445:15;479:4;476:1;469:15;495:125;560:9;;;581:10;;;578:36;;;594:18;;:::i;625:127::-;686:10;681:3;677:20;674:1;667:31;717:4;714:1;707:15;741:4;738:1;731:15;757:380;836:1;832:12;;;;879;;;900:61;;954:4;946:6;942:17;932:27;;900:61;1007:2;999:6;996:14;976:18;973:38;970:161;;1053:10;1048:3;1044:20;1041:1;1034:31;1088:4;1085:1;1078:15;1116:4;1113:1;1106:15;970:161;;757:380;;;:::o;1268:518::-;1370:2;1365:3;1362:11;1359:421;;;1406:5;1403:1;1396:16;1450:4;1447:1;1437:18;1520:2;1508:10;1504:19;1501:1;1497:27;1491:4;1487:38;1556:4;1544:10;1541:20;1538:47;;;-1:-1:-1;1579:4:33;1538:47;1634:2;1629:3;1625:12;1622:1;1618:20;1612:4;1608:31;1598:41;;1689:81;1707:2;1700:5;1697:13;1689:81;;;1766:1;1752:16;;1733:1;1722:13;1689:81;;;1693:3;;1359:421;1268:518;;;:::o;1962:1299::-;2088:3;2082:10;2115:18;2107:6;2104:30;2101:56;;;2137:18;;:::i;:::-;2166:97;2256:6;2216:38;2248:4;2242:11;2216:38;:::i;:::-;2210:4;2166:97;:::i;:::-;2312:4;2343:2;2332:14;;2360:1;2355:649;;;;3048:1;3065:6;3062:89;;;-1:-1:-1;3117:19:33;;;3111:26;3062:89;-1:-1:-1;;1919:1:33;1915:11;;;1911:24;1907:29;1897:40;1943:1;1939:11;;;1894:57;3164:81;;2325:930;;2355:649;1215:1;1208:14;;;1252:4;1239:18;;-1:-1:-1;;2391:20:33;;;2509:222;2523:7;2520:1;2517:14;2509:222;;;2605:19;;;2599:26;2584:42;;2712:4;2697:20;;;;2665:1;2653:14;;;;2539:12;2509:222;;;2513:3;2759:6;2750:7;2747:19;2744:201;;;2820:19;;;2814:26;-1:-1:-1;;2903:1:33;2899:14;;;2915:3;2895:24;2891:37;2887:42;2872:58;2857:74;;2744:201;-1:-1:-1;;;;2991:1:33;2975:14;;;2971:22;2958:36;;-1:-1:-1;1962:1299:33:o;3266:173::-;3334:20;;-1:-1:-1;;;;;3383:31:33;;3373:42;;3363:70;;3429:1;3426;3419:12;3363:70;3266:173;;;:::o;3444:254::-;3512:6;3520;3573:2;3561:9;3552:7;3548:23;3544:32;3541:52;;;3589:1;3586;3579:12;3541:52;3612:29;3631:9;3612:29;:::i;:::-;3602:39;3688:2;3673:18;;;;3660:32;;-1:-1:-1;;;3444:254:33:o;3703:527::-;3852:2;3841:9;3834:21;3815:4;3884:6;3878:13;3927:6;3922:2;3911:9;3907:18;3900:34;3952:1;3962:140;3976:6;3973:1;3970:13;3962:140;;;4087:2;4071:14;;;4067:23;;4061:30;4056:2;4037:17;;;4033:26;4026:66;3991:10;3962:140;;;3966:3;4151:1;4146:2;4137:6;4126:9;4122:22;4118:31;4111:42;4221:2;4214;4210:7;4205:2;4197:6;4193:15;4189:29;4178:9;4174:45;4170:54;4162:62;;;3703:527;;;;:::o;4235:186::-;4294:6;4347:2;4335:9;4326:7;4322:23;4318:32;4315:52;;;4363:1;4360;4353:12;4315:52;4386:29;4405:9;4386:29;:::i;:::-;4376:39;4235:186;-1:-1:-1;;;4235:186:33:o;5284:367::-;5347:8;5357:6;5411:3;5404:4;5396:6;5392:17;5388:27;5378:55;;5429:1;5426;5419:12;5378:55;-1:-1:-1;5452:20:33;;5495:18;5484:30;;5481:50;;;5527:1;5524;5517:12;5481:50;5564:4;5556:6;5552:17;5540:29;;5624:3;5617:4;5607:6;5604:1;5600:14;5592:6;5588:27;5584:38;5581:47;5578:67;;;5641:1;5638;5631:12;5578:67;5284:367;;;;;:::o;5656:997::-;5771:6;5779;5787;5795;5803;5856:2;5844:9;5835:7;5831:23;5827:32;5824:52;;;5872:1;5869;5862:12;5824:52;5912:9;5899:23;5945:18;5937:6;5934:30;5931:50;;;5977:1;5974;5967:12;5931:50;6000:22;;6053:4;6045:13;;6041:27;-1:-1:-1;6031:55:33;;6082:1;6079;6072:12;6031:55;6122:2;6109:16;6148:18;6140:6;6137:30;6134:50;;;6180:1;6177;6170:12;6134:50;6227:7;6220:4;6211:6;6207:2;6203:15;6199:26;6196:39;6193:59;;;6248:1;6245;6238:12;6193:59;6279:4;6271:13;;;;-1:-1:-1;6303:6:33;-1:-1:-1;6347:20:33;;6334:34;6393:18;6380:32;;6377:52;;;6425:1;6422;6415:12;6377:52;6464:72;6528:7;6517:8;6506:9;6502:24;6464:72;:::i;:::-;6555:8;;-1:-1:-1;6438:98:33;-1:-1:-1;6609:38:33;;-1:-1:-1;6643:2:33;6628:18;;6609:38;:::i;:::-;6599:48;;5656:997;;;;;;;;:::o;6898:945::-;6967:6;7020:2;7008:9;6999:7;6995:23;6991:32;6988:52;;;7036:1;7033;7026:12;6988:52;7076:9;7063:23;7109:18;7101:6;7098:30;7095:50;;;7141:1;7138;7131:12;7095:50;7164:22;;7217:4;7209:13;;7205:27;-1:-1:-1;7195:55:33;;7246:1;7243;7236:12;7195:55;7286:2;7273:16;7312:18;7304:6;7301:30;7298:56;;;7334:18;;:::i;:::-;7383:2;7377:9;7475:2;7437:17;;-1:-1:-1;;7433:31:33;;;7466:2;7429:40;7425:54;7413:67;;7510:18;7495:34;;7531:22;;;7492:62;7489:88;;;7557:18;;:::i;:::-;7593:2;7586:22;7617;;;7658:15;;;7675:2;7654:24;7651:37;-1:-1:-1;7648:57:33;;;7701:1;7698;7691:12;7648:57;7757:6;7752:2;7748;7744:11;7739:2;7731:6;7727:15;7714:50;7810:1;7784:19;;;7805:2;7780:28;7773:39;;;;7788:6;6898:945;-1:-1:-1;;;;6898:945:33:o;7848:260::-;7916:6;7924;7977:2;7965:9;7956:7;7952:23;7948:32;7945:52;;;7993:1;7990;7983:12;7945:52;8016:29;8035:9;8016:29;:::i;:::-;8006:39;;8064:38;8098:2;8087:9;8083:18;8064:38;:::i;:::-;8054:48;;7848:260;;;;;:::o;8113:118::-;8199:5;8192:13;8185:21;8178:5;8175:32;8165:60;;8221:1;8218;8211:12;8165:60;8113:118;:::o;8236:315::-;8301:6;8309;8362:2;8350:9;8341:7;8337:23;8333:32;8330:52;;;8378:1;8375;8368:12;8330:52;8401:29;8420:9;8401:29;:::i;:::-;8391:39;;8480:2;8469:9;8465:18;8452:32;8493:28;8515:5;8493:28;:::i;:::-;8540:5;8530:15;;;8236:315;;;;;:::o;8966:135::-;9005:3;9026:17;;;9023:43;;9046:18;;:::i;:::-;-1:-1:-1;9093:1:33;9082:13;;8966:135::o;9106:400::-;9308:2;9290:21;;;9347:2;9327:18;;;9320:30;9386:34;9381:2;9366:18;;9359:62;-1:-1:-1;;;9452:2:33;9437:18;;9430:34;9496:3;9481:19;;9106:400::o;9996:771::-;10241:2;10230:9;10223:21;10280:6;10275:2;10264:9;10260:18;10253:34;10337:6;10329;10324:2;10313:9;10309:18;10296:48;10393:1;10388:2;10364:22;;;10360:31;;10353:42;;;-1:-1:-1;;10454:2:33;10433:15;;10429:29;10414:45;;10501:18;;;10497:27;;10490:4;10475:20;;10468:57;10541:11;;;10534:27;;;-1:-1:-1;;;;;10573:31:33;;10570:51;;;10617:1;10614;10607:12;10570:51;10651:6;10648:1;10644:14;10702:6;10694;10688:3;10684:2;10680:12;10667:42;10734:15;10726:35;;;;-1:-1:-1;;;;;;9996:771:33:o;10772:245::-;10839:6;10892:2;10880:9;10871:7;10867:23;10863:32;10860:52;;;10908:1;10905;10898:12;10860:52;10940:9;10934:16;10959:28;10981:5;10959:28;:::i;13149:398::-;13351:2;13333:21;;;13390:2;13370:18;;;13363:30;13429:34;13424:2;13409:18;;13402:62;-1:-1:-1;;;13495:2:33;13480:18;;13473:32;13537:3;13522:19;;13149:398::o;13965:400::-;14167:2;14149:21;;;14206:2;14186:18;;;14179:30;14245:34;14240:2;14225:18;;14218:62;-1:-1:-1;;;14311:2:33;14296:18;;14289:34;14355:3;14340:19;;13965:400::o",
        "linkReferences": {}
    },
    "methodIdentifiers": {
        "approveInsuranceClaimAndEscrowPayment(address,bool)": "a6a721af",
        "approvedClaims(address,address)": "801cdf01",
        "checkpoint(string)": "6697a925",
        "checkpointCounts(address)": "c0a32996",
        "checkpointOfStakings(address)": "86a74843",
        "checkpoints(address,uint256)": "0cdfebfa",
        "claimRequests(address,address)": "8d68dd61",
        "claimants(address)": "171c41af",
        "deregisterAsClaimant()": "69b76ed9",
        "deregisterAsInsurer()": "aa3f6cdd",
        "deregisterAsStaker()": "9a23bfa5",
        "getContractBalance()": "6f9fb98a",
        "insuranceClaimProofVerifier()": "1c407d92",
        "insurers(address)": "de45aeef",
        "reInsurancePool()": "66717ca1",
        "reclaimProtocolVerifier()": "17d1bd2b",
        "registerAsClaimant()": "18666713",
        "registerAsInsurer()": "782d13b3",
        "registerAsStaker()": "fb9316fa",
        "stakeERC20TokenIntoReInsurancePool()": "2283cf29",
        "stakeNativeTokenIntoInsurancePool()": "f5603c07",
        "stakedAmounts(address)": "10c1c103",
        "stakers(address)": "9168ae72",
        "submitInsuranceClaim(bytes,bytes32[],address)": "2481f598",
        "testFunctionForCheckPoint()": "8099b3f5",
        "unstakeERC20TokenFromReInsurancePool()": "767d5679",
        "unstakeNativeTokenFromInsurancePool()": "7d8440ea",
        "version()": "54fd4d50"
    },
    "rawMetadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract InsuranceClaimProofVerifier\",\"name\":\"_insuranceClaimProofVerifier\",\"type\":\"address\"},{\"internalType\":\"contract ReInsurancePool\",\"name\":\"_reInsurancePool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"claimant\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isUseFundFromReInsurancePool\",\"type\":\"bool\"}],\"name\":\"approveInsuranceClaimAndEscrowPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"approvedClaims\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"methodName\",\"type\":\"string\"}],\"name\":\"checkpoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"checkpointCounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"checkpointCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"checkpointOfStakings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"checkpoints\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimRequests\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimants\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deregisterAsClaimant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deregisterAsInsurer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deregisterAsStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"insuranceClaimProofVerifier\",\"outputs\":[{\"internalType\":\"contract InsuranceClaimProofVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"insurers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reInsurancePool\",\"outputs\":[{\"internalType\":\"contract ReInsurancePool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reclaimProtocolVerifier\",\"outputs\":[{\"internalType\":\"contract ReclaimProtocolVerifier\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsClaimant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsInsurer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerAsStaker\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeERC20TokenIntoReInsurancePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeNativeTokenIntoInsurancePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakedAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"proof\",\"type\":\"bytes\"},{\"internalType\":\"bytes32[]\",\"name\":\"publicInputs\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"insurer\",\"type\":\"address\"}],\"name\":\"submitInsuranceClaim\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testFunctionForCheckPoint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeERC20TokenFromReInsurancePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeNativeTokenFromInsurancePool\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approveInsuranceClaimAndEscrowPayment(address,bool)\":{\"notice\":\"- Approve the insurance claim by an insurer\"},\"checkpoint(string)\":{\"notice\":\"- checkpoint function\"},\"deregisterAsClaimant()\":{\"notice\":\"- Deregister as a claimant or an insurer\"},\"getContractBalance()\":{\"notice\":\"- Get the contract's native token balance\"},\"registerAsClaimant()\":{\"notice\":\"- Register as a claimant or an insurer\"},\"registerAsStaker()\":{\"notice\":\"- Register/Deregister as a staker (of the insurance pool)\"},\"stakeERC20TokenIntoReInsurancePool()\":{\"notice\":\"- stake a given amount of a ERC20 token\"},\"stakeNativeTokenIntoInsurancePool()\":{\"notice\":\"- stake a given amount of a native token into the insurance pool\"},\"submitInsuranceClaim(bytes,bytes32[],address)\":{\"notice\":\"- Submit the insurance claim by a claimant\"},\"unstakeERC20TokenFromReInsurancePool()\":{\"notice\":\"- unstakea given amount of a ERC20 token\"},\"unstakeNativeTokenFromInsurancePool()\":{\"notice\":\"- unstake a given amount of a native token from the insurance pool\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/InsuranceClaimManager.sol\":\"InsuranceClaimManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/foundry-noir-helper/lib/forge-std/src/\",\":foundry-noir-helper/=lib/foundry-noir-helper/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solady/=lib/foundry-noir-helper/lib/solady/src/\"]},\"sources\":{\"contracts/InsuranceClaimManager.sol\":{\"keccak256\":\"0x36732753ac8e3fc47a62ea69a0963bc99aec1361ec7c5303ff1105cf0c704e75\",\"urls\":[\"bzz-raw://fcd3c79935176f17d87fa3770ab8752b0e83a895cf0caa3b60c1ad4e9c234079\",\"dweb:/ipfs/QmR5mTXvyoWMVvmcaENghtPP5G4oaRX3vf1NnQDYX5WUoD\"]},\"contracts/ReInsurancePool.sol\":{\"keccak256\":\"0x10188ad8ba34ad940b79f6a54dc8d03a5fe0bda80bfad9016ee4250dc84a9933\",\"urls\":[\"bzz-raw://7292faa0130d16d6cfa3494ed2a86ef0eee1b5ad2f6a52204aea017b3d3253af\",\"dweb:/ipfs/QmZneJWh3L7wfbALkiakdKvFNTy73sX59c9e1MGNvLmx43\"]},\"contracts/circuit/InsuranceClaimProofVerifier.sol\":{\"keccak256\":\"0xd9c0697d291f90c4ac35ee3f31d5664f7dce1c3d72b22a652dc3a333881a42e6\",\"urls\":[\"bzz-raw://27da981671228807e8f47472b1b192b3bf6c1e17f839dac4c35b1781a25eb481\",\"dweb:/ipfs/QmXZY7TtMxyHrouXNxyZ31DtQ3uugj65Q3Zmq3axw9qUKD\"]},\"contracts/circuit/ultra-verifier/plonk_vk.sol\":{\"keccak256\":\"0x0f7c516fe178f40f909707685353a3d92b74c1a457b27e1ab4a1f34afcbf0e90\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2eb43c35796dbdbe3defba0858d65d5b88bf01b96719d395ea307c0884801450\",\"dweb:/ipfs/QmWVfjQzAvrXKoc3bvN6WfsFbfnogLcuQ1Z7D5Fv7U47Qs\"]},\"contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xf9cef5c2ef1b11a154ad5583ea22c2273b2b72b2c6b72f6d5e9c92ff165d4c09\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ea2df5280e2d9fe82c99bcdaa87f47ce4267bc473fa5b39ab783bc9243d1ae4d\",\"dweb:/ipfs/QmQnqSEWDjprmY5tL4UCvEb8X5jk3k8nsLN7dvfUnCmedR\"]},\"contracts/reclaim-protocol/ReclaimProtocolVerifier.sol\":{\"keccak256\":\"0x4b6301134cad521625e7417f4e3ba4188dbd10d9c4c8d934a0a61576684f038a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://464adb65d9c399bd040a4efc97563986f9ac6349a32fc12acbadfccd4fc1a9b5\",\"dweb:/ipfs/QmNY4zUSCxNnBth48mPegYcG4w81YbQuPesijpSb1Pxj9C\"]}},\"version\":1}",
    "metadata": {
        "compiler": {
            "version": "0.8.28+commit.7893614a"
        },
        "language": "Solidity",
        "output": {
            "abi": [
                {
                    "inputs": [
                        {
                            "internalType": "contract InsuranceClaimProofVerifier",
                            "name": "_insuranceClaimProofVerifier",
                            "type": "address"
                        },
                        {
                            "internalType": "contract ReInsurancePool",
                            "name": "_reInsurancePool",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "constructor"
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "fallback"
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "claimant",
                            "type": "address"
                        },
                        {
                            "internalType": "bool",
                            "name": "isUseFundFromReInsurancePool",
                            "type": "bool"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "approveInsuranceClaimAndEscrowPayment",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "approvedClaims",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "string",
                            "name": "methodName",
                            "type": "string"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "checkpoint",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "user",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkpointCounts",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "checkpointCount",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkpointOfStakings",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "checkpoints",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        },
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "claimRequests",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "claimants",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deregisterAsClaimant",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deregisterAsInsurer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "deregisterAsStaker",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "getContractBalance",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "insuranceClaimProofVerifier",
                    "outputs": [
                        {
                            "internalType": "contract InsuranceClaimProofVerifier",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "insurers",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "reInsurancePool",
                    "outputs": [
                        {
                            "internalType": "contract ReInsurancePool",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "reclaimProtocolVerifier",
                    "outputs": [
                        {
                            "internalType": "contract ReclaimProtocolVerifier",
                            "name": "",
                            "type": "address"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "registerAsClaimant",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "registerAsInsurer",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "registerAsStaker",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "stakeERC20TokenIntoReInsurancePool",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "function",
                    "name": "stakeNativeTokenIntoInsurancePool",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakedAmounts",
                    "outputs": [
                        {
                            "internalType": "uint256",
                            "name": "",
                            "type": "uint256"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "address",
                            "name": "",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "stakers",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [
                        {
                            "internalType": "bytes",
                            "name": "proof",
                            "type": "bytes"
                        },
                        {
                            "internalType": "bytes32[]",
                            "name": "publicInputs",
                            "type": "bytes32[]"
                        },
                        {
                            "internalType": "address",
                            "name": "insurer",
                            "type": "address"
                        }
                    ],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "submitInsuranceClaim",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "testFunctionForCheckPoint",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unstakeERC20TokenFromReInsurancePool",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "nonpayable",
                    "type": "function",
                    "name": "unstakeNativeTokenFromInsurancePool",
                    "outputs": [
                        {
                            "internalType": "bool",
                            "name": "",
                            "type": "bool"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "view",
                    "type": "function",
                    "name": "version",
                    "outputs": [
                        {
                            "internalType": "string",
                            "name": "",
                            "type": "string"
                        }
                    ]
                },
                {
                    "inputs": [],
                    "stateMutability": "payable",
                    "type": "receive"
                }
            ],
            "devdoc": {
                "kind": "dev",
                "methods": {},
                "version": 1
            },
            "userdoc": {
                "kind": "user",
                "methods": {
                    "approveInsuranceClaimAndEscrowPayment(address,bool)": {
                        "notice": "- Approve the insurance claim by an insurer"
                    },
                    "checkpoint(string)": {
                        "notice": "- checkpoint function"
                    },
                    "deregisterAsClaimant()": {
                        "notice": "- Deregister as a claimant or an insurer"
                    },
                    "getContractBalance()": {
                        "notice": "- Get the contract's native token balance"
                    },
                    "registerAsClaimant()": {
                        "notice": "- Register as a claimant or an insurer"
                    },
                    "registerAsStaker()": {
                        "notice": "- Register/Deregister as a staker (of the insurance pool)"
                    },
                    "stakeERC20TokenIntoReInsurancePool()": {
                        "notice": "- stake a given amount of a ERC20 token"
                    },
                    "stakeNativeTokenIntoInsurancePool()": {
                        "notice": "- stake a given amount of a native token into the insurance pool"
                    },
                    "submitInsuranceClaim(bytes,bytes32[],address)": {
                        "notice": "- Submit the insurance claim by a claimant"
                    },
                    "unstakeERC20TokenFromReInsurancePool()": {
                        "notice": "- unstakea given amount of a ERC20 token"
                    },
                    "unstakeNativeTokenFromInsurancePool()": {
                        "notice": "- unstake a given amount of a native token from the insurance pool"
                    }
                },
                "version": 1
            }
        },
        "settings": {
            "remappings": [
                "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
                "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
                "forge-std/=lib/foundry-noir-helper/lib/forge-std/src/",
                "foundry-noir-helper/=lib/foundry-noir-helper/src/",
                "halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/",
                "openzeppelin-contracts/=lib/openzeppelin-contracts/",
                "solady/=lib/foundry-noir-helper/lib/solady/src/"
            ],
            "optimizer": {
                "enabled": true,
                "runs": 200
            },
            "metadata": {
                "bytecodeHash": "ipfs"
            },
            "compilationTarget": {
                "contracts/InsuranceClaimManager.sol": "InsuranceClaimManager"
            },
            "evmVersion": "paris",
            "libraries": {}
        },
        "sources": {
            "contracts/InsuranceClaimManager.sol": {
                "keccak256": "0x36732753ac8e3fc47a62ea69a0963bc99aec1361ec7c5303ff1105cf0c704e75",
                "urls": [
                    "bzz-raw://fcd3c79935176f17d87fa3770ab8752b0e83a895cf0caa3b60c1ad4e9c234079",
                    "dweb:/ipfs/QmR5mTXvyoWMVvmcaENghtPP5G4oaRX3vf1NnQDYX5WUoD"
                ],
                "license": null
            },
            "contracts/ReInsurancePool.sol": {
                "keccak256": "0x10188ad8ba34ad940b79f6a54dc8d03a5fe0bda80bfad9016ee4250dc84a9933",
                "urls": [
                    "bzz-raw://7292faa0130d16d6cfa3494ed2a86ef0eee1b5ad2f6a52204aea017b3d3253af",
                    "dweb:/ipfs/QmZneJWh3L7wfbALkiakdKvFNTy73sX59c9e1MGNvLmx43"
                ],
                "license": null
            },
            "contracts/circuit/InsuranceClaimProofVerifier.sol": {
                "keccak256": "0xd9c0697d291f90c4ac35ee3f31d5664f7dce1c3d72b22a652dc3a333881a42e6",
                "urls": [
                    "bzz-raw://27da981671228807e8f47472b1b192b3bf6c1e17f839dac4c35b1781a25eb481",
                    "dweb:/ipfs/QmXZY7TtMxyHrouXNxyZ31DtQ3uugj65Q3Zmq3axw9qUKD"
                ],
                "license": null
            },
            "contracts/circuit/ultra-verifier/plonk_vk.sol": {
                "keccak256": "0x0f7c516fe178f40f909707685353a3d92b74c1a457b27e1ab4a1f34afcbf0e90",
                "urls": [
                    "bzz-raw://2eb43c35796dbdbe3defba0858d65d5b88bf01b96719d395ea307c0884801450",
                    "dweb:/ipfs/QmWVfjQzAvrXKoc3bvN6WfsFbfnogLcuQ1Z7D5Fv7U47Qs"
                ],
                "license": "Apache-2.0"
            },
            "contracts/interfaces/IERC20.sol": {
                "keccak256": "0xf9cef5c2ef1b11a154ad5583ea22c2273b2b72b2c6b72f6d5e9c92ff165d4c09",
                "urls": [
                    "bzz-raw://ea2df5280e2d9fe82c99bcdaa87f47ce4267bc473fa5b39ab783bc9243d1ae4d",
                    "dweb:/ipfs/QmQnqSEWDjprmY5tL4UCvEb8X5jk3k8nsLN7dvfUnCmedR"
                ],
                "license": "Apache-2.0"
            },
            "contracts/reclaim-protocol/ReclaimProtocolVerifier.sol": {
                "keccak256": "0x4b6301134cad521625e7417f4e3ba4188dbd10d9c4c8d934a0a61576684f038a",
                "urls": [
                    "bzz-raw://464adb65d9c399bd040a4efc97563986f9ac6349a32fc12acbadfccd4fc1a9b5",
                    "dweb:/ipfs/QmNY4zUSCxNnBth48mPegYcG4w81YbQuPesijpSb1Pxj9C"
                ],
                "license": "MIT"
            }
        },
        "version": 1
    },
    "id": 0
}